

%div{:class=>"container"}
   %div
      %div
         %ol{:class=>"breadcrumb"}
            %li
               = link_to company_user_path(current_user.company_id ,current_user.id) do
                  =t('.home')
            %li #{t('.edit_password')}
<!-- Main component for a primary marketing message or call to action -->
%div{:id=>"main", :class=>"container"}
   %div{:class=>"img-rounded col-sm-5",:style=>"background: white;padding-bottom:10px"}
      = form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f|
         %fieldset{:class=>"form-group"}
            = f.label t('.email')
            = f.email_field :email, autofocus: true, :class=>"form-control", :disabled=>true
         %fieldset{:class=>"form-group"}
            - if @minimum_password_length
               %em #{@minimum_password_length} #{t('.chars_min')}
               %br
            =f.label :password, t('.new_password')
            %div{:id=>"passwordholder", :class=>"input-group"}
               =f.password_field :password, autofocus: true, autocomplete: "off", :class=>"form-control", :id=>"passwordfield", :required=>true, :pattern=>".{6,}", :title=>"6 characters minimum"
            %fieldset{:class=>"form-group"}
               = f.label :password_confirmation, t('.confirm_password')
               = f.password_field :password_confirmation, autocomplete: "off", :class=>"form-control", :required=>true, :id=>"confirmPasswordfield"
            %fieldset{:class=>"form-group"}
               = f.label t('.current_password')
               = f.password_field :current_password, autocomplete: "off", :class=>"form-control", :required=>true
            %div{:class=>"form-group"}
               = f.submit t('.update'), :class=>"btn btn-default"
               = link_to "<button class='btn btn-default'>#{t('.cancel')}</button>".html_safe, company_user_path(current_user.company_id, current_user)

:Javascript
   function validatePassword() {
      console.log("in validate password")
      var pass2=document.getElementById("passwordfield").value;
      var pass1=document.getElementById("confirmPasswordfield").value;
      if(pass1!=pass2) {
        console.log("Passwords don't match!!!")
        document.getElementById("confirmPasswordfield").setCustomValidity("Passwords Don't Match");
      } else {
        console.log("Passwords Match")
        document.getElementById("confirmPasswordfield").setCustomValidity('');
        //empty string means no validation error
      }
   }
   var ready
   ready = function () {
       document.getElementById("passwordfield").onchange = validatePassword;
       document.getElementById("confirmPasswordfield").onchange = validatePassword;
       console.log("Ready executed")
       var options = {
           onLoad: function () { },
           onKeyUp: function (evt) {
               $(evt.target).pwstrength("outputErrorList");
           }
       };
       if (typeof $('#passwordfield').destroy != "undefined") {
            console.log("Destroy is defined!!!")
            $('#passwordfield').destroy();
       }
       $('#passwordfield').pwstrength(options);
   };
   $(document).ready(ready);
